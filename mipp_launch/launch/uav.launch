<?xml version="1.0"?>
<launch>
  <arg name="uav_id"        default="0"/>
  <arg name="uav_name"      default="uav$(arg uav_id)"/>
  <arg name="initial_x"     default="0"/>
  <arg name="initial_y"     default="0"/>
  <arg name="run_gazebo" default="false"/>
  <arg name="run_rviz"   default="false"/>

  <arg name="world_file_name"   default="simple_obstacle" />
  <arg name="world_path"        default="$(find avoidance)/sim/worlds/$(arg world_file_name).world" />
  <arg name="gui" default="false"/>
  <arg name="ns" default="/$(arg uav_name)"/>
  <arg name="model" default="iris_depth_camera"/>
  <arg name="fcu_url" default="udp://:14540@localhost:14557"/>
  <arg name="gcs_url" default="" />   <!-- GCS link is provided by SITL -->
  <arg name="tgt_system" default="1" />
  <arg name="tgt_component" default="1" />
  <arg name="vehicle" default="iris_obs_avoid"/>
  <arg name="pointcloud_topics" default="[/camera/depth/points]"/>

  <remap from="/mavros/companion_process/status"              to="$(arg ns)/mavros/companion_process/status" />
  <remap from="/mavros/altitude"                              to="$(arg ns)/mavros/altitude" />
  <remap from="/mavros/local_position/pose"                   to="$(arg ns)/mavros/local_position/pose" />
  <remap from="/mavros/local_position/velocity_local"         to="$(arg ns)/mavros/local_position/velocity_local" />
  <remap from="/mavros/mission/waypoints"                     to="$(arg ns)/mavros/mission/waypoints" />
  <remap from="/mavros/obstacle/send"                         to="$(arg ns)/mavros/obstacle/send" />
  <remap from="/mavros/param/param_value"                     to="$(arg ns)/mavros/param/param_value" />
  <remap from="/mavros/setpoint_position/local"               to="$(arg ns)/mavros/setpoint_position/local" />
  <remap from="/mavros/setpoint_velocity/cmd_vel_unstamped"   to="$(arg ns)/mavros/setpoint_velocity/cmd_vel_unstamped" />
  <remap from="/mavros/state"                                 to="$(arg ns)/mavros/state" />
  <remap from="/mavros/trajectory/desired"                    to="$(arg ns)/mavros/trajectory/desired" />
  <remap from="/mavros/trajectory/generated"                  to="$(arg ns)/mavros/trajectory/generated" />

  <remap from="/camera/depth/points"                          to="$(arg ns)/camera/depth/points" />
  <remap from="/camera/rgb/image_raw"                         to="$(arg ns)/camera/rgb/image_raw" />

  <!-- Define a static transform from a camera internal frame to the fcu for every camera used -->
  <node pkg="tf" type="static_transform_publisher" name="tf_depth_camera"
        args="0 0 0 -1.57 0 -1.57 fcu camera_link 10"/>

  <param name="use_sim_time" value="true" />

  <!-- Launch rqt_reconfigure -->
  <node pkg="rqt_reconfigure" type="rqt_reconfigure" output="screen" name="rqt_reconfigure" />

  <group ns="$(arg ns)">
    <!-- Launch PX4 SITL -->
    <include file="$(find px4)/launch/px4.launch">
        <arg name="vehicle" value="$(arg vehicle)"/>
    </include>

    <!-- Launch MavROS -->
    <include file="$(find mavros)/launch/node.launch">
        <arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
        <!-- Need to change the config file to get the tf topic and get local position in terms of local origin -->
        <arg name="config_yaml" value="$(find avoidance)/resource/px4_config.yaml" />
        <arg name="fcu_url" value="$(arg fcu_url)" />
        <arg name="gcs_url" value="$(arg gcs_url)" />
        <arg name="tgt_system" value="$(arg tgt_system)" />
        <arg name="tgt_component" value="$(arg tgt_component)" />
    </include>

    <!-- Spawn vehicle model
    <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-sdf -database $(arg model) -model $(arg vehicle) -x $(arg initial_x) -y $(arg initial_y) -z 0 -R 0 -P 0 -Y 0">
    </node>-->
    <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-sdf -database $(arg model) -model $(arg vehicle)">
    </node>

    <!-- Load custom console configuration -->
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find local_planner)/resource/custom_rosconsole.conf"/>
    
    <!-- Launch local planner -->
    <arg name="manager"             default="local_planner_manager"/>

    <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" output="screen"/>
    <node pkg="nodelet" type="nodelet" name="local_planner_nodelet" args="load LocalPlannerNodelet $(arg manager)" output="screen">
      <param name="goal_x_param"  value="0" />
      <param name="goal_y_param"  value="0"/>
      <param name="goal_z_param"  value="3" />
      <param name="world_name"    value="$(find avoidance)/sim/worlds/$(arg world_file_name).yaml" />
      <rosparam param="pointcloud_topics" subst_value="True">$(arg pointcloud_topics)</rosparam>
    </node>
    <!-- Offboard test node -->
    <node name="offb_test" pkg="offb_test" type="offb_test">
    </node>

  </group>

  <!-- Launch Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" if="$(arg run_gazebo)">
      <arg name="gui" value="$(arg gui)"/>
      <arg name="world_name" value="$(arg world_path)" />
  </include>
  <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find local_planner)/resource/local_planner.rviz"  if="$(arg run_rviz)"/> 

</launch>
